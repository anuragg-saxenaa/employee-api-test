/*
 * Employee API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.6
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Department;
import io.swagger.client.model.EmployeeDemographics;
import io.swagger.client.model.EmploymentType;
import io.swagger.client.model.Group;
import io.swagger.client.model.Role;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AlayaCare employee entity data for creation
 */
@ApiModel(description = "AlayaCare employee entity data for creation")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-06-01T22:10:48.279Z")
public class EmployeeUpdate {
  @SerializedName("demographics")
  private EmployeeDemographics demographics = null;

  @SerializedName("external_id")
  private String externalId = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("roles")
  private List<Role> roles = null;

  @SerializedName("groups")
  private List<Group> groups = null;

  @SerializedName("departments")
  private List<Department> departments = null;

  @SerializedName("designation")
  private String designation = null;

  @SerializedName("payroll_number")
  private String payrollNumber = null;

  @SerializedName("max_weekly_capacity")
  private String maxWeeklyCapacity = null;

  @SerializedName("min_weekly_capacity")
  private String minWeeklyCapacity = null;

  @SerializedName("employment_type")
  private EmploymentType employmentType = null;

  @SerializedName("timezone")
  private String timezone = null;

  public EmployeeUpdate demographics(EmployeeDemographics demographics) {
    this.demographics = demographics;
    return this;
  }

   /**
   * Get demographics
   * @return demographics
  **/
  @ApiModelProperty(value = "")
  public EmployeeDemographics getDemographics() {
    return demographics;
  }

  public void setDemographics(EmployeeDemographics demographics) {
    this.demographics = demographics;
  }

  public EmployeeUpdate externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * Get externalId
   * @return externalId
  **/
  @ApiModelProperty(value = "")
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

  public EmployeeUpdate username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @ApiModelProperty(example = "john.smith", value = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public EmployeeUpdate roles(List<Role> roles) {
    this.roles = roles;
    return this;
  }

  public EmployeeUpdate addRolesItem(Role rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<Role>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * List of roles. Role objects have ID and name for convenience of input, but only the IDs are used here. For valid IDs, request /roles. 
   * @return roles
  **/
  @ApiModelProperty(value = "List of roles. Role objects have ID and name for convenience of input, but only the IDs are used here. For valid IDs, request /roles. ")
  public List<Role> getRoles() {
    return roles;
  }

  public void setRoles(List<Role> roles) {
    this.roles = roles;
  }

  public EmployeeUpdate groups(List<Group> groups) {
    this.groups = groups;
    return this;
  }

  public EmployeeUpdate addGroupsItem(Group groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<Group>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * List of groups. Group objects have ID and name for convenience of input, but only the IDs are used here. For valid IDs, request /groups. 
   * @return groups
  **/
  @ApiModelProperty(value = "List of groups. Group objects have ID and name for convenience of input, but only the IDs are used here. For valid IDs, request /groups. ")
  public List<Group> getGroups() {
    return groups;
  }

  public void setGroups(List<Group> groups) {
    this.groups = groups;
  }

  public EmployeeUpdate departments(List<Department> departments) {
    this.departments = departments;
    return this;
  }

  public EmployeeUpdate addDepartmentsItem(Department departmentsItem) {
    if (this.departments == null) {
      this.departments = new ArrayList<Department>();
    }
    this.departments.add(departmentsItem);
    return this;
  }

   /**
   * List of departments. Department objects have ID and name for convenience of input, but only the IDs are used here. For valid IDs, request /departments. 
   * @return departments
  **/
  @ApiModelProperty(value = "List of departments. Department objects have ID and name for convenience of input, but only the IDs are used here. For valid IDs, request /departments. ")
  public List<Department> getDepartments() {
    return departments;
  }

  public void setDepartments(List<Department> departments) {
    this.departments = departments;
  }

  public EmployeeUpdate designation(String designation) {
    this.designation = designation;
    return this;
  }

   /**
   * Get designation
   * @return designation
  **/
  @ApiModelProperty(example = "Nurse", value = "")
  public String getDesignation() {
    return designation;
  }

  public void setDesignation(String designation) {
    this.designation = designation;
  }

  public EmployeeUpdate payrollNumber(String payrollNumber) {
    this.payrollNumber = payrollNumber;
    return this;
  }

   /**
   * Get payrollNumber
   * @return payrollNumber
  **/
  @ApiModelProperty(example = "A123", value = "")
  public String getPayrollNumber() {
    return payrollNumber;
  }

  public void setPayrollNumber(String payrollNumber) {
    this.payrollNumber = payrollNumber;
  }

  public EmployeeUpdate maxWeeklyCapacity(String maxWeeklyCapacity) {
    this.maxWeeklyCapacity = maxWeeklyCapacity;
    return this;
  }

   /**
   * Get maxWeeklyCapacity
   * @return maxWeeklyCapacity
  **/
  @ApiModelProperty(example = "24.5", value = "")
  public String getMaxWeeklyCapacity() {
    return maxWeeklyCapacity;
  }

  public void setMaxWeeklyCapacity(String maxWeeklyCapacity) {
    this.maxWeeklyCapacity = maxWeeklyCapacity;
  }

  public EmployeeUpdate minWeeklyCapacity(String minWeeklyCapacity) {
    this.minWeeklyCapacity = minWeeklyCapacity;
    return this;
  }

   /**
   * Get minWeeklyCapacity
   * @return minWeeklyCapacity
  **/
  @ApiModelProperty(example = "10", value = "")
  public String getMinWeeklyCapacity() {
    return minWeeklyCapacity;
  }

  public void setMinWeeklyCapacity(String minWeeklyCapacity) {
    this.minWeeklyCapacity = minWeeklyCapacity;
  }

  public EmployeeUpdate employmentType(EmploymentType employmentType) {
    this.employmentType = employmentType;
    return this;
  }

   /**
   * Get employmentType
   * @return employmentType
  **/
  @ApiModelProperty(value = "")
  public EmploymentType getEmploymentType() {
    return employmentType;
  }

  public void setEmploymentType(EmploymentType employmentType) {
    this.employmentType = employmentType;
  }

  public EmployeeUpdate timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * Timezone name in IANA format (iana.org/time-zones). If set to null, will inherit the branch timezone. 
   * @return timezone
  **/
  @ApiModelProperty(example = "America/Toronto", value = "Timezone name in IANA format (iana.org/time-zones). If set to null, will inherit the branch timezone. ")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeUpdate employeeUpdate = (EmployeeUpdate) o;
    return Objects.equals(this.demographics, employeeUpdate.demographics) &&
        Objects.equals(this.externalId, employeeUpdate.externalId) &&
        Objects.equals(this.username, employeeUpdate.username) &&
        Objects.equals(this.roles, employeeUpdate.roles) &&
        Objects.equals(this.groups, employeeUpdate.groups) &&
        Objects.equals(this.departments, employeeUpdate.departments) &&
        Objects.equals(this.designation, employeeUpdate.designation) &&
        Objects.equals(this.payrollNumber, employeeUpdate.payrollNumber) &&
        Objects.equals(this.maxWeeklyCapacity, employeeUpdate.maxWeeklyCapacity) &&
        Objects.equals(this.minWeeklyCapacity, employeeUpdate.minWeeklyCapacity) &&
        Objects.equals(this.employmentType, employeeUpdate.employmentType) &&
        Objects.equals(this.timezone, employeeUpdate.timezone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(demographics, externalId, username, roles, groups, departments, designation, payrollNumber, maxWeeklyCapacity, minWeeklyCapacity, employmentType, timezone);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeUpdate {\n");
    
    sb.append("    demographics: ").append(toIndentedString(demographics)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    departments: ").append(toIndentedString(departments)).append("\n");
    sb.append("    designation: ").append(toIndentedString(designation)).append("\n");
    sb.append("    payrollNumber: ").append(toIndentedString(payrollNumber)).append("\n");
    sb.append("    maxWeeklyCapacity: ").append(toIndentedString(maxWeeklyCapacity)).append("\n");
    sb.append("    minWeeklyCapacity: ").append(toIndentedString(minWeeklyCapacity)).append("\n");
    sb.append("    employmentType: ").append(toIndentedString(employmentType)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

