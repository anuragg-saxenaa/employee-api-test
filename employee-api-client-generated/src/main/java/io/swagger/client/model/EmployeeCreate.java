/*
 * Employee API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.6
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Department;
import io.swagger.client.model.EmployeeDemographics;
import io.swagger.client.model.EmployeeStatusCreate;
import io.swagger.client.model.EmployeeUpdate;
import io.swagger.client.model.EmploymentType;
import io.swagger.client.model.Group;
import io.swagger.client.model.Role;
import java.io.IOException;
import java.util.List;

/**
 * EmployeeCreate
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-06-01T22:10:48.279Z")
public class EmployeeCreate extends EmployeeUpdate {
  @SerializedName("branch_id")
  private Integer branchId = null;

  @SerializedName("profile_id")
  private Integer profileId = null;

  @SerializedName("status")
  private EmployeeStatusCreate status = null;

  public EmployeeCreate branchId(Integer branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Set employee branch. If not specified, will default to branch of the user creating the employee. 
   * @return branchId
  **/
  @ApiModelProperty(value = "Set employee branch. If not specified, will default to branch of the user creating the employee. ")
  public Integer getBranchId() {
    return branchId;
  }

  public void setBranchId(Integer branchId) {
    this.branchId = branchId;
  }

  public EmployeeCreate profileId(Integer profileId) {
    this.profileId = profileId;
    return this;
  }

   /**
   * Use an existing client or contact profile ID when creating an employee. Demographics will be shared between this employee and the previously existing entity. A unique username is still required for any new employee. 
   * @return profileId
  **/
  @ApiModelProperty(example = "7890", value = "Use an existing client or contact profile ID when creating an employee. Demographics will be shared between this employee and the previously existing entity. A unique username is still required for any new employee. ")
  public Integer getProfileId() {
    return profileId;
  }

  public void setProfileId(Integer profileId) {
    this.profileId = profileId;
  }

  public EmployeeCreate status(EmployeeStatusCreate status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public EmployeeStatusCreate getStatus() {
    return status;
  }

  public void setStatus(EmployeeStatusCreate status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeCreate employeeCreate = (EmployeeCreate) o;
    return Objects.equals(this.branchId, employeeCreate.branchId) &&
        Objects.equals(this.profileId, employeeCreate.profileId) &&
        Objects.equals(this.status, employeeCreate.status) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branchId, profileId, status, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeCreate {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    profileId: ").append(toIndentedString(profileId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

