/*
 * Employee API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.6
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Employee note data required for creation.
 */
@ApiModel(description = "Employee note data required for creation.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-06-01T22:10:48.279Z")
public class EmployeeNotesCreate {
  /**
   * Status of the employee note. Either &#x60;active&#x60; or &#x60;archived&#x60;.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("active"),
    
    ARCHIVED("archived");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = StatusEnum.ACTIVE;

  @SerializedName("note_type")
  private String noteType = null;

  @SerializedName("content")
  private String content = null;

  public EmployeeNotesCreate status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the employee note. Either &#x60;active&#x60; or &#x60;archived&#x60;.
   * @return status
  **/
  @ApiModelProperty(example = "active", value = "Status of the employee note. Either `active` or `archived`.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public EmployeeNotesCreate noteType(String noteType) {
    this.noteType = noteType;
    return this;
  }

   /**
   * Note type category of the employee note
   * @return noteType
  **/
  @ApiModelProperty(example = "employee_general", required = true, value = "Note type category of the employee note")
  public String getNoteType() {
    return noteType;
  }

  public void setNoteType(String noteType) {
    this.noteType = noteType;
  }

  public EmployeeNotesCreate content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Content of the employee note. A subset of HTML is accepted.
   * @return content
  **/
  @ApiModelProperty(example = "Employee requested additional training.", required = true, value = "Content of the employee note. A subset of HTML is accepted.")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeNotesCreate employeeNotesCreate = (EmployeeNotesCreate) o;
    return Objects.equals(this.status, employeeNotesCreate.status) &&
        Objects.equals(this.noteType, employeeNotesCreate.noteType) &&
        Objects.equals(this.content, employeeNotesCreate.content);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, noteType, content);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeNotesCreate {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    noteType: ").append(toIndentedString(noteType)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

